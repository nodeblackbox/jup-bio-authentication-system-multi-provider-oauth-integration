generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider    = "postgresql"
  url         = env("DATABASE_URL")
  directUrl   = env("DIRECT_URL")
}

model User {
  id                     String    @id @default(cuid())
  name                   String
  email                  String?   @unique
  emailVerified          DateTime?
  image                  String?
  
  // Discord-specific fields
  discriminator          String?
  banner                 String?
  accent_color           Int?
  global_name            String?
  avatar_decoration_data Json?
  banner_color           String?
  clan                   String?
  primary_guild          String?
  mfa_enabled            Boolean?
  locale                 String?
  premium_type           Int?
  verified               Boolean?
  
  // Twitter/X-specific fields
  screen_name            String?
  location               String?
  description            String?
  profile_image_url      String?
  followers_count        Int?
  friends_count          Int?
  statuses_count         Int?
  
  accounts               Account[]
  sessions               Session[]

  @@index([name])
}

model Account {
  id                 String   @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  
  user               User     @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
